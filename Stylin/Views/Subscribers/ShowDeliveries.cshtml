

<!--Basic styling for map element where that map will be loaded ultimately.-->
<style>
    #map {
        height: 350px;
        width: 350px;
    }
</style>


<div class="text-center mt-4">
    <button id="getData" class="btn-primary">Get Data</button>

    <div style="position: absolute; top: 150px; left: 30%" id="map"></div>

    <!--As we are using $ in our code which a jQuery literal to referecne jQuery code. Thats we are loading jQuery from google servers. if we dont' load it, $ would become undefined.-->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <!--loading here Google map library to show google map from google server-->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC2Uyq82S9tdxWSHz4c4eI4E1IEHqjkaFg">
    </script>

    
    @*1.Ajax
    Asynchranous call to reqeust the server to get data.

    type, contentType, dataType and other keys are in the object that we pass in the ajax function to get data real time.*@
    
    <script>
        $("#getData").click(function () {
            let address = [];
            let packages = [];
            let arrivalDate = [];
            $.ajax(
                {
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    dataType: 'JSON',
                    url: '/Subscribers/SubscribersWithPackage',
                    success:
                        function (response) {
                            debugger;
                            for (let i = 0; i < response.length; i++) {
                                let adr = response[i].address + response[i].city + response[i].zipCode + response[i].state;
                                address.push(adr);
                                let pkg = response[i].styleName;
                                packages.push(pkg);
                                debugger;
                                localStorage.setItem("Address", JSON.stringify(address));
                                localStorage.setItem("Packages", JSON.stringify(packages));
                            };
                        },
                    error:
                        function (response) {
                            debugger;
                            alert("Error: " + response);
                        }
                });
            //Getting the Address array from local server.
            address = JSON.parse(localStorage.getItem("Address"));
            let latlng = { lat: 0, lng: 0 };
            let latLong = [];

            //in the loop, calling Google GeoCoding API for every address in the Address array to get Lat and Long values
            //Geting latlong value of current address in Address array
            for (let k = 0; k < address.length; k++) {
                $.ajax({
                    url: "https://maps.googleapis.com/maps/api/geocode/json?address=" + address[k] + "&key=AIzaSyC2Uyq82S9tdxWSHz4c4eI4E1IEHqjkaFg",
                    success:
                        function (response) {

                            latlng.lat = response.results[0].geometry.location.lat;
                            latlng.lng = response.results[0].geometry.location.lng;

                            //cloning the current ltlng object because objects are reference types in javascript
                            //Cloning the object into a duplicate object otherwise it will get the previous value from the object and overwrite it in the array.
                            let copy = { ...latlng };

                            //pushing that new copy in latlng array
                            latLong.push(copy);
                            //pushing latlng array in into server with 'latlng' as its name
                            localStorage.setItem("LatLongs", JSON.stringify(latLong));

                        }
                })
            }
            //getting that LatLongs array from local server
            let lts = JSON.parse(localStorage.getItem("LatLongs"));
            //getting packages array from local server
            let pkgs = JSON.parse(localStorage.getItem("Packages"));
            loadMap(lts, pkgs);
        });
        //The loadMap function which is responsible for loading map document, grabbing from google servers
        function loadMap(latlngs, pkgs) {

            //creating new ,ap instance from Google.Map class
            let map = new google.maps.Map(document.getElementById('map'), {
                zoom: 10,
                center: new google.maps.LatLng(34.274647, -119.229034),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });
           //infoWindow instance from Google. Map class
            var infowindow = new google.maps.InfoWindow();

            var marker;
            // I use a for loop to iterate throughout all latlng objects from latlngs array that we get as a parameter
            //and create a marker for ever object with lat and long values.
            for (let k = 0; k < latlngs.length; k++) {
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(latlngs[k].lat, latlngs[k].lng),
                    map: map
                });

                //Setting the current marker on the map
                marker.setMap(map);

                //on 'click' event on each marker so when user clicks button it will show a info window(not complete)
                google.maps.event.addListener(marker, 'click', (function (marker, k) {
                    return function () {
                        infowindow.setContent(pkgs[k]);
                        infowindow.open(map, marker);
                    }
                })(marker, k));
            }
            console.log(latlngs);
        }
    </script>
